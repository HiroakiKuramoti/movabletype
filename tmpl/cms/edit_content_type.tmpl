<mt:setvar name="edit_screen" value="1">
<mt:if name="new_object">
  <mt:setvar name="page_title" value="<__trans phrase="Create Content Type">">
<mt:else>
  <mt:setvar name="page_title" value="<__trans phrase="Edit Content Type">">
</mt:if>

<mt:setvarblock name="system_msg">
<div id="msg-block"></div>
  <mt:if name="saved">
    <mtapp:statusmsg
       id="saved"
       class="success">
      <__trans phrase="Contents type settings has been saved.">
    </mtapp:statusmsg>
  </mt:if>
  <mt:if name="err_msg">
    <mtapp:statusmsg
       id="err_msg"
       class="error"
       can_close="0">
      <mt:var name="err_msg">
    </mtapp:statusmsg>
  </mt:if>
</mt:setvarblock>

<mt:setvarblock name="html_head" append="1">
<link rel="stylesheet" href="<$mt:var name="static_uri"$>css/content-type.css?v=<$mt:var name="mt_version_id" escape="url"$>">
</mt:setvarblock>

<mt:setvarblock name="js_include" append="1">
<script type="text/javascript" src="<mt:var name="static_uri">js/cms.js?v=<$mt:var name="mt_version_id" escape="url"$>"></script>
<script type="riot/tag" src="<mt:var name="static_uri">js/contenttype/tag/content-fields.tag?v=<mt:var name="mt_version_id" escape="url">"></script>
<script type="riot/tag" src="<mt:var name="static_uri">js/contenttype/tag/content-field.tag?v=<mt:var name="mt_version_id" escape="url">"></script>
<mt:if name="options_htmls">
<script type="riot/tag">
<mt:loop name="options_htmls"><mt:var name="html">
</mt:loop>
</script>
</mt:if>
<script type="text/javascript" src="<mt:var name="static_uri">riot/riot+compiler.min.js?v=<mt:var name="mt_version_id" escape="url">"></script>
<script>
  var content_field_types = JSON.parse('<mt:var name="content_field_types" escape="json">');
  riot.mount('content-fields', {
    types: content_field_types,
    fields: []
  });
</script>
</mt:setvarblock>

<mt:setvarblock name="jq_js_include" append="1">
  jQuery(function() {
    jQuery('input[type="text"]').keyup(function() {
      setDirty(true);
    });
    jQuery('input[type="radio"]').change(function() {
      setDirty(true);
    });

<mt:unless name="id">
    var data = JSON.parse( localStorage.getItem("ContentType") ) || {};
    jQuery("#setting-title").text( trans( 'Edit [_1]', data.name ) );
</mt:unless>
<mt:if name="name">
    jQuery("#setting-title").text( trans( 'Edit [_1]', '<mt:var name="name" escape="js">' ) );
    var data = {};
    data['name'] = '<mt:var name="name" escape="js">';
    data['description'] = '<mt:var name="description" escape="js">';
    data['fields'] = {
    <mt:loop name="fields">
      '<mt:var name="content_field_id">': {
        'type': '<mt:var name="type" escape="js">',
        'order': '<mt:var name="order" escape="js">',
        'new': <mt:if name="unique_id">0<mt:else>1</mt:if>,
        'options': {
    <mt:loop name="options">
        <mt:if name="key">'<mt:var name="key" escape="js">': '<mt:var name="value" escape="js">',</mt:if>
    </mt:loop>
        }
      }<mt:unless name="__last__">,</mt:unless>
    </mt:loop>
    };
    <mt:loop name="fields">
    add_field('<mt:var name="content_field_id" escape="js">', '<mt:var name="type" escape="js">');
    </mt:loop>
    localStorage.setItem("ContentType", JSON.stringify(data));
</mt:if>
    set_events();
    set_sortable();
  });

  jQuery('#save-button').click( function() {
    setDirty(false);
    var datalist = localStorage.getItem("ContentType");
    var id = jQuery("#id").val();
    var userDispOption = jQuery('#user_disp_option:checked').length > 0 ? 1 : 0;
    jQuery('<form/>', {action: "<mt:var name="script_url">", method: 'post'})
    .append(jQuery('<input/>', {type: 'hidden', name: '__mode',           value: 'save_cfg_content_type'}))
    .append(jQuery('<input/>', {type: 'hidden', name: 'magic_token',      value: '<mt:var name="magic_token">'}))
    .append(jQuery('<input/>', {type: 'hidden', name: 'blog_id',          value: '<mt:var name="blog_id">'}))
    .append(jQuery('<input/>', {type: 'hidden', name: 'id',               value: '<mt:var name="id">'}))
    .append(jQuery('<input/>', {type: 'hidden', name: 'data',             value: datalist}))
    .append(jQuery('<input/>', {type: 'hidden', name: 'user_disp_option', value: userDispOption}))
    .appendTo(document.body)
    .submit();
  });

/*  jQuery('.add-link').click(function() {
    var selected = jQuery('select#type').val();
    if ( !selected )
      return false;
    if ( jQuery('.add-link').hasClass('disabled') )
      return false;
    var max_id = 0;
    jQuery('[id^=content-field-block-]').each( function() {
      var id = jQuery(this).attr('id').match(/\d+/);
      if (Number(max_id) < Number(id))
        max_id = id;
    });
    var id = Number(max_id) + 1;
    var length = jQuery('#sortable').sortable('toArray').length;
    var order = length + 1;
    var type_name = jQuery("#type").val();
    add_field(id, type_name);
    var data = JSON.parse( localStorage.getItem("ContentType") );
    if (!data['fields'])
        data['fields'] = {};
    if (!data['fields'][id])
        data['fields'][id] = {};
    data['fields'][id]['type'] = type_name;
    data['fields'][id]['order'] = order;
    data['fields'][id]['new'] = 1;
    localStorage.setItem("ContentType", JSON.stringify(data));
    set_sortable();
    set_events();
    return false;
  });*/

  function add_field(id, type) {
    var data = JSON.parse( localStorage.getItem("ContentType") ) || {};
    var label = data['fields'] && data['fields'][id] && data['fields'][id]['options'] && data['fields'][id]['options']['label']
              ? data['fields'][id]['options']['label'] + ' (' + type + ')' : 'No label (' + type + ')';
    var field='<div class="mt-draggable mb-2" draggable="true" aria-grabbed="false" id="content-field-block-' + id + '">'
             + '<div class="col" id="content-field-block-' + id + '-label"><svg title="" role="img" class="mt-icon--secondary"><use xlink:href="<mt:var name="static_uri">images/sprite.svg#ic_contentstype" /></svg>' + label + '</div>'
             + '<div class="col-auto" id="content-field-block-' + id + '-edit"><svg title="" role="img" class="mt-icon"><use xlink:href="<mt:var name="static_uri">images/sprite.svg#ic_edit" /></svg><__trans phrase="Edit"></div>'
             + '<div class="col-auto" id="content-field-block-' + id + '-delete"><svg title="" role="img" class="mt-icon"><use xlink:href="<mt:var name="static_uri">images/sprite.svg#ic_trash" /></svg><__trans phrase="Delete"></div>'
             + '<div class="col-auto"><svg title="" role="img" class="mt-icon"><use xlink:href="<mt:var name="static_uri">/images/sprite.svg#ic_move" /></svg></div>'
             + '</div>';

    jQuery("#sortable").append(field);
  }

  function set_events() {
    jQuery('a.delete-link').unbind('click').click(function() {
      all_options_hidden();
      if (! confirm(trans('Are you sure you want to remove this settings?'))) {
        return false;
      }
      var block = jQuery(this).parent().parent().parent().parent();
      block.remove();
      var current_id = block.attr("id").match(/\d+/);
      var data = JSON.parse( localStorage.getItem("ContentType") );
      if (data['fields'][current_id]['new'] === 0) {
        if (data['removed_fields']) {
          data['removed_fields'] += ',' + current_id;
        }
        else {
          data['removed_fields'] = String(current_id);
        }
      }
      delete data['fields'][current_id];
      localStorage.setItem("ContentType", JSON.stringify(data));
      setDirty(true);
      return false;
    });
    jQuery('a.edit-link').click(function() {
      all_options_hidden();
      var block = jQuery(this).parent().parent().parent().parent();
      var current_id = block.attr("id").match(/\d+/);
      var type_name = jQuery("#type-" + current_id).val();
      var options = jQuery('#' + type_name + '-options');
      options.css( 'display', 'block' );
      jQuery("#current_field_id").val(current_id);
      var data = JSON.parse( localStorage.getItem("ContentType") );
      var regexp = new RegExp(type_name + '-(.*)');
      options.find("input").each(function(index, element) {
        // Clear
        if (input_type === 'checkbox' || input_type === 'radio') {
          jQuery(element).prop("checked", false);
        }
        else {
          jQuery(element).val('');
        }

        var input_type = jQuery(element).attr("type");
        if (input_type === 'hidden')
          return true;
        if (input_type === 'radio') {
          var opt_name = (jQuery(element).attr('name').match(regexp))[1];
        } else {
          var opt_id = jQuery(element).attr("id");
          var opt_name = (opt_id.match(regexp))[1];
        }
        var opt_val = '';
        if (data['fields'][current_id] && data['fields'][current_id]['options'] && data['fields'][current_id]['options'][opt_name])
          opt_val = data['fields'][current_id]['options'][opt_name];
        if (input_type === 'checkbox') {
          if (opt_val === 1 || opt_val === '1')
            jQuery(element).prop("checked", true);
        }
        else if (input_type === 'radio') {
          if (jQuery(element).val() === opt_val) {
            jQuery(element).prop('checked', 'checked');
          }
        }
        else {
          jQuery(element).val(opt_val);
        }
      });
      options.find("select").each(function(index, element) {
        // Clear
        jQuery(element).val('');

        var opt_id = jQuery(element).attr("id");
        var opt_name = (opt_id.match(regexp))[1];
        if (data['fields'][current_id] && data['fields'][current_id]['options'] && data['fields'][current_id]['options'][opt_name])
          jQuery(element).val(data['fields'][current_id]['options'][opt_name]);
      });
      options.find("textarea").each(function(index, element) {
        // Clear
        jQuery(element).val('');

        var opt_id = jQuery(element).attr("id");
        var opt_name = (opt_id.match(regexp))[1];
        if (data['fields'][current_id] && data['fields'][current_id]['options'] && data['fields'][current_id]['options'][opt_name])
          jQuery(element).val(data['fields'][current_id]['options'][opt_name]);
      });
      var count = 1;
      jQuery('div.' + type_name + '-values').remove();
      while (data['fields'][current_id] && data['fields'][current_id]['options'] && data['fields'][current_id]['options']['values_label_' + count]) {
        var add_button = jQuery('#' + type_name + '-values-field').find('a.add-values-list');
        var initial = data['fields'][current_id]['options']['initial_value'];
        var label = data['fields'][current_id]['options']['values_label_' + count];
        var value = data['fields'][current_id]['options']['values_value_' + count];
        addList(add_button, initial, label, value);
        count++;
      }
      setDirty(false);
    });
    jQuery('a.save-link').unbind('click').click(function() {
      var options = jQuery(this).parent().parent().parent();
      var id = options.attr("id");
      var type_name = (id.match(/(.*)-options/))[1];
      var current_id = jQuery("#current_field_id").val();
      var regexp = new RegExp(type_name + '-(.*)');
      var data = JSON.parse( localStorage.getItem("ContentType") );
      options.find("input").each(function(index, element) {
        var input_type = jQuery(element).attr("type");
        var opt_name = '';
        var opt_val = '';
        if (input_type === 'hidden')
          return true;
        if (input_type === 'radio') {
          opt_name = (jQuery(element).attr('name').match(regexp))[1];
          opt_val = jQuery(element).prop('checked')
                  ? jQuery(element).val()
                  : '';
        } else {
          var opt_id = jQuery(element).attr("id");
          opt_name = (opt_id.match(regexp))[1];
          opt_val = '';
          if (input_type === 'checkbox') {
            opt_val = jQuery(element).prop('checked') ? 1 : 0;
          }
          else {
            opt_val = jQuery(element).val();
          }
        }
        if (!data['fields'][current_id]['options'])
          data['fields'][current_id]['options'] = {};
        data['fields'][current_id]['options'][opt_name] = opt_val;
        if ( opt_name === 'label' )
          jQuery('#content-field-block-' + current_id).find('#content-field-label').text(opt_val);
      });
      options.find("select").each(function(index, element) {
        var opt_id = jQuery(element).attr("id");
        var opt_name = (opt_id.match(regexp))[1];
        var opt_val = jQuery(element).val();
        if (!data['fields'][current_id]['options'])
          data['fields'][current_id]['options'] = {};
        data['fields'][current_id]['options'][opt_name] = opt_val;
      });
      options.find("textarea").each(function(index, element) {
        var opt_id = jQuery(element).attr("id");
        var opt_name = (opt_id.match(regexp))[1];
        var opt_val = jQuery(element).val();
        if (!data['fields'][current_id]['options'])
          data['fields'][current_id]['options'] = {};
        data['fields'][current_id]['options'][opt_name] = opt_val;
      });
      localStorage.setItem("ContentType", JSON.stringify(data));
      options.css( 'display', 'none' );
      setDirty(true);
    });
    jQuery('a.add-values-list').unbind('click').click(function() {
      addList(this, "", "", "");
    });
  }

  function set_sortable() {
    jQuery('#sortable').sortable({
      items: 'div.field.sort-enabled',
      placeholder: 'placeholder',
      distance: 3,
      opacity: 0.8,
      cursor: 'move',
      forcePlaceholderSize: true,
      handle: '.field-header',
      containment: 'body',
      update: function () {
        var data = JSON.parse( localStorage.getItem("ContentType") );
        var count = 1;
        jQuery('[id^=content-field-block-]').each( function() {
          var id = jQuery(this).attr('id').match(/\d+/);
          data['fields'][id]['order'] = count;
          count++;
          setDirty(true);
        });
        localStorage.setItem("ContentType", JSON.stringify(data));
      }
    });
  }

  function all_options_hidden() {
  /*
    var contentFieldTypesOptions = <mt:var name="content_field_types_options">;
    jQuery.each( contentFieldTypesOptions, function( key, val ) {
        jQuery('#' + key + '-options').css( 'display', 'none' );
    });
  */
  }

  function removeList(removeButton) {
    var class_name = jQuery(removeButton).parent().attr('class');
    var type_name = (class_name.match(/(.*)-values/))[1];
    jQuery(removeButton).parent().remove();
    setDirty(true);
    jQuery('.' + type_name + '-values').each( function(index, element) {
      var prefix = type_name + '-values_';
      var number = index + 1;
      jQuery(this).children('[id^=' + prefix + 'label_]').attr('id', prefix + 'label_' + number);
      jQuery(this).children('[id^=' + prefix + 'value_]').attr('id', prefix + 'value_' + number);
    });
  }

  function addList( addButton, initial, label, value ) {
    var id = jQuery(addButton).parents('fieldset').attr('id');
    var type_name = (id.match(/(.*)-options/))[1];
    var div = jQuery('.' + type_name + '-values');
    var number = div.length + 1;
    var newDiv = '<div class="' + type_name + '-values">' + "\n";
    newDiv += '  <input type="radio" name="' + type_name + '-initial_value" id="' + type_name + '-initial_value_' + number + '" value="' + value + '" ';
    if ( initial === value ) {
      newDiv += 'checked="checked" class="checked" ';
    }
    newDiv += '/>' + "\n";
    newDiv += '  <input type="text" name="' + type_name + '-values_label" id="' + type_name + '-values_label_' + number + '" class="text short" value="' + label + '" placeholder="Label" />' + "\n";
    newDiv += ':';
    newDiv += '  <input type="text" name="' + type_name + '-values_value" id="' + type_name + '-values_value_' + number + '" class="text short" value="' + value + '" placeholder="Value" />' + "\n";
    newDiv += '  <a href="javascript:void(0)" class="remove-values-list"><img src="<mt:var name="static_uri">images/status_icons/close.gif" /></a>' + "\n";
    newDiv += '</div>' + "\n";

    jQuery(addButton).before(newDiv);

    jQuery('a.remove-values-list').unbind('click').click(function() {
      removeList(this);
    });
    jQuery('#' + type_name + '-initial_value_' + number).unbind('click').click(function() {
      if ( jQuery(this).hasClass('checked') ) {
        jQuery(this).prop('checked', false);
        jQuery(this).removeClass('checked');
      }
      else {
        jQuery('input[type=radio].checked').removeClass('checked');
        jQuery(this).addClass('checked');
      }
    });

    setDirty(true);
  }
</mt:setvarblock>

<mt:setvarblock name="page_content">
  <mtapp:form id="content-type-form" name="content-type-form" mode="save">
  <input type="hidden" name="_type" value="content_type" />
  <input type="hidden" name="blog_id" value="<mt:var name="blog_id" escape="html">" />
  <input type="hidden" id="id" value="<mt:var name="id" escape="html">" />
  <div class="row">
    <div class="col">
      <mtapp:setting
       id="name"
       label="<__trans phrase="Content Type Name">"
       label_for="name"
       required="1">
        <input type="text" name="name" id="name" class="text med required form-control" value="<mt:var name="name" escape="html">">
      </mtapp:setting>
    </div>
  </div>

  <div class="row">
    <div class="col">
    <mtapp:setting
       id="name"
       label="<__trans phrase="Description">"
       label_for="description">
        <textarea name="description" id="description" class="form-control"><mt:var name="description" escape="html"></textarea>
      </mtapp:setting>
    </div>
  </div>

  
  <mt:unless name="new_object">
  <div class="row">
    <div class="col">
    <mtapp:setting
       id="unique_id"
       label="<__trans phrase="Unique ID">"
       label_for="unique_id">
      <mt:var name="unique_id" escape="html">
    </mtapp:setting>
    </div>
  </div>
  </mt:unless>

  <div class="row">
    <div class="col">
    <mtapp:setting
       id="user_disp_option"
       label="<__trans phrase="Allow users to change the display and sort of fields by display option">"
       label_for="user_disp_option">
      <input type="checkbox" class="mt-switch form-control" id="user_disp_option" /><label for="user_disp_option"></label>
      </mtapp:setting>
    </div>
  </div>

  <div data-is="content-fields"></div>

    <mt:setvarblock name="action_buttons">
  <button
     type="button"
     id="save-button"
     accesskey="s"
     title="<__trans phrase="Save (s)">"
     class="btn btn-primary">
    <__trans phrase="Save">
  </button>
    </mt:setvarblock>

  <mt:include name="include/actions_bar.tmpl" bar_position="bottom" hide_pager="1" settings_bar="1">
  
  </mtapp:form>
</mt:setvarblock>

<mt:include name="layout/default.tmpl">
<mt:var name="layout">
