<mt:setvar name="edit_screen" value="1">
<mt:if name="new_object">
  <mt:setvar name="page_title" value="<__trans phrase="Create Content Type">">
<mt:else>
  <mt:setvar name="page_title" value="<__trans phrase="Edit Content Type">">
</mt:if>

<mt:setvarblock name="system_msg">
<div id="msg-block">
<mt:loop name="content_field_types">
  <mt:if name="warning">
    <mtapp:statusmsg
       class="warning"
       can_close="0">
      <mt:var name="warning">
    </mtapp:statusmsg>
  </mt:if>
</mt:loop>
  <mt:if name="saved">
    <mtapp:statusmsg
       id="saved"
       class="success">
      <__trans phrase="Contents type settings has been saved.">
    </mtapp:statusmsg>
  </mt:if>
  <mt:if name="error">
    <mtapp:statusmsg
       id="error"
       class="error"
       can_close="0">
      <mt:var name="error">
    </mtapp:statusmsg>
  </mt:if>
  <mt:if name="request.not_deleted">
    <mtapp:statusmsg
      id="not-deleted"
      class="error"
      can_close="0">
      <__trans phrase="Some content field was not deleted. You need to delete archive mapping for the content field first.">
    </mtapp:statusmsg>
  </mt:if>
</div>
</mt:setvarblock>

<mt:setvarblock name="html_head" append="1">
<link rel="stylesheet" href="<$mt:var name="static_uri"$>css/content-type.css?v=<$mt:var name="mt_version_id" escape="url"$>">
</mt:setvarblock>

<mt:setvarblock name="js_include" append="1">
<script type="text/javascript" src="<mt:var name="static_uri">js/cms.js?v=<$mt:var name="mt_version_id" escape="url"$>"></script>
<script type="riot/tag" src="<mt:var name="static_uri">js/contenttype/tag/content-fields.tag?v=<mt:var name="mt_version_id" escape="url">"></script>
<script type="riot/tag" src="<mt:var name="static_uri">js/contenttype/tag/content-field.tag?v=<mt:var name="mt_version_id" escape="url">"></script>
<mt:if name="options_htmls">
<script type="riot/tag">
<mt:loop name="options_htmls"><mt:var name="html">
</mt:loop>
</script>
</mt:if>
<script type="text/javascript" src="<mt:var name="static_uri">riot/riot+compiler.min.js?v=<mt:var name="mt_version_id" escape="url">"></script>
<script>
  var content_field_types = JSON.parse('<mt:var name="content_field_types_json" escape="js">');
  var invalid_types = content_field_types.filter(function (field_type) {
    return field_type.warning;
  }).reduce(function (hash, field_type) {
    hash[field_type.type] = true;
    return hash;
  }, {});
  var fields = <mt:if name="fields">JSON.parse('<mt:var name="fields" escape="js">');<mt:else>[];</mt:if>
  riot.mount('content-fields', {
    blog_id: "<mt:var name="blog_id" escape="js">",
    magic_token: "<mt:var name="magic_token" escape="js">",
    return_args: "<mt:var name="return_args" escape="js">",
    id: "<mt:var name="id" escape="js">",
    unique_id: "<mt:var name="unique_id" escape="js">",
    name: "<mt:var name="name" escape="js">",
    description: "<mt:var name="description" escape="js">",
    user_disp_option: "<mt:unless name="id">checked<mt:else><mt:if name="user_disp_option">checked</mt:if></mt:unless>",
    fields: fields,
    types: content_field_types,
    invalid_types: invalid_types,
  });
</script>
</mt:setvarblock>

<mt:setvarblock name="jq_js_include" append="1">
  jQuery('input[type="text"]').keyup(function() {
    setDirty(true);
  });
  jQuery('textarea').keyup(function() {
    setDirty(true);
  });
  jQuery('input[type="radio"]').change(function() {
    setDirty(true);
  });
  jQuery('input[type="checkbox"]').change(function() {
    setDirty(true);
  });
  jQuery('select').change(function() {
    setDirty(true);
  });

  jQuery.mtValidator('selection-field-values-option',
    jQuery.extend({}, jQuery.mtValidator('simple'), {
      showError: function ( $target, $error_block ) {
        $target.parent().append($error_block);
      },
    })
  );

  jQuery.mtValidator('content-field-block', {
    errorClass: 'border-danger',
    removeError: function () {},
    showError: function () {},
    updateError: function () {},
    wrapError: function () {}
  });

  jQuery.mtValidateAddRules({
    '.content-field-block': function ($e) {
      return $e.find('.has-error').length == 0;
    },

    '.values-option-table': function ($e) {
      var hasNoValuesOption = $e.find('tbody tr').length == 0;
      if (hasNoValuesOption) {
        this.error = true;
        this.errstr = trans('1 or more label-value pair is required');
        return false;
      }

      var hasInvalidValuesOption = $e.find('input[type=text].is-invalid').length > 0;
      if (hasInvalidValuesOption) {
        this.error = true;
        this.errstr = ' ';  // no error message
        return false;
      }

      return true;
    }
  });

  jQuery(document).on('after-mt-valid', '.values-option-table input[type=text]', function () {
    var $table = jQuery(this).parents('.values-option-table');
    var ns = $table.data( 'mtValidator' );
    if ( !ns ) return true;
    $table.mtValid({ focus: false });
  });

  jQuery(document).on('after-mt-valid', '.content-field-block div:not(.values-option-table) input, .values-option-table', function () {
    var $block = jQuery(this).parents('.content-field-block');
    var ns = $block.data( 'mtValidator' );
    if ( !ns ) return true;
    $block.mtValid({ focus: false, afterTrigger: false });
  });
</mt:setvarblock>

<mt:setvarblock name="page_content">

  <div data-is="content-fields"></div>

  </mtapp:form>
</mt:setvarblock>

<mt:include name="layout/default.tmpl">
<mt:var name="layout">
